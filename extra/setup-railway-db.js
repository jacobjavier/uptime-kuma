const Database = require("../server/database");
const { log } = require("../src/util");

/**
 * Script de configuraci√≥n para PostgreSQL en Railway
 * Este script configurar√° autom√°ticamente la base de datos usando DATABASE_URL de Railway
 */
async function setupRailwayDatabase() {
    try {
        log.info("setup-railway", "üöÇ Iniciando configuraci√≥n de base de datos para Railway");
        
        // Verificar DATABASE_URL
        if (!process.env.DATABASE_URL) {
            log.warn("setup-railway", "‚ö†Ô∏è DATABASE_URL no est√° configurada");
            log.info("setup-railway", "Railway configurar√° esto autom√°ticamente cuando agregues PostgreSQL");
            log.info("setup-railway", "Por ahora, usando SQLite como fallback");
            
            // Configurar SQLite como fallback
            const dbConfig = {
                type: "sqlite"
            };
            
            Database.writeDBConfig(dbConfig);
            log.info("setup-railway", "‚úÖ Configurado con SQLite (temporal)");
        } else {
            log.info("setup-railway", "‚úÖ DATABASE_URL detectada");
            
            // Configurar para PostgreSQL
            const dbConfig = {
                type: "postgres"
            };
            
            // Inicializar directorio de datos
            Database.initDataDir({});
            
            // Escribir configuraci√≥n
            Database.writeDBConfig(dbConfig);
            
            log.info("setup-railway", "‚úÖ Base de datos PostgreSQL configurada");
            log.info("setup-railway", "üéâ Configuraci√≥n completada exitosamente");
        }
        
        process.exit(0);
    } catch (error) {
        log.error("setup-railway", "‚ùå Error durante la configuraci√≥n: " + error.message);
        log.error("setup-railway", error.stack);
        process.exit(1);
    }
}

// Ejecutar configuraci√≥n
setupRailwayDatabase();
